<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Create New Recipe</title>
  <link rel="stylesheet" href="/css/style.css">
  <style>
    body {
      background-image: url('/assets/images/new.png');
      background-attachment: fixed;
      background-size: cover;
      background-position: center;
    }
    main {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
    }
    .new-form {
      background: rgba(0, 0, 0, 0.6);
      padding: 40px;
      border-radius: 8px;
      max-width: 600px;
      width: 100%;
      display: grid;
      gap: 15px;
      color: #fff;
    }
    .new-form h1 {
      text-align: center;
      margin-bottom: 20px;
    }
    .new-form label {
      font-weight: bold;
    }
    .new-form input,
    .new-form textarea,
    .new-form select {
      padding: 10px;
      border: none;
      border-radius: 4px;
      width: 100%;
    }
    .new-form .row {
      display: flex;
      gap: 10px;
    }
    .new-form .row > div {
      flex: 1;
    }
    .new-form button {
      padding: 12px;
      border: none;
      border-radius: 4px;
      background: #F4A261;
      color: #fff;
      font-size: 1rem;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .new-form button:hover {
      background: #e98b44;
    }
  </style>
</head>
<body>
  <%- include('../partials/nav') %>
  <main>
    <form action="/recipes" method="POST" class="new-form">
      <h1>Create New Recipe</h1>
      <label for="title">Title</label>
      <input type="text" name="title" id="title" required>
      <label for="description">Description</label>
      <textarea name="description" id="description" rows="3" required></textarea>
      <div class="row">
        <div>
          <label for="prepTime">Prep Time</label>
          <input type="text" name="prepTime" id="prepTime" required>
        </div>
        <div>
          <label for="cookTime">Cook Time</label>
          <input type="text" name="cookTime" id="cookTime" required>
        </div>
      </div>
      <label for="totalTime">Total Time</label>
      <input type="text" name="totalTime" id="totalTime" required>
      <label for="servings">Servings</label>
      <input type="text" name="servings" id="servings" required>
      <label for="ingredients">Ingredients (comma separated)</label>
      <textarea name="ingredients" id="ingredients" rows="3" required></textarea>
      <label for="instructions">Instructions (separate steps with newlines)</label>
      <textarea name="instructions" id="instructions" rows="6" required></textarea>
      <label for="majorRegion">Main Region</label>
      <select name="majorRegion" id="majorRegion" required>
        <option value="">--Select--</option>
        <option value="Asia">Asia</option>
        <option value="Europe">Europe</option>
        <option value="Africa">Africa</option>
        <option value="Americas">Americas</option>
        <option value="Oceania">Oceania</option>
      </select>
      <label for="subRegion">Subregion</label>
      <select name="subRegion" id="subRegion">
        <option value="">--Select--</option>
      </select>
      <button type="submit">Create Recipe</button>
    </form>
  </main>
  <script>
    const regionMapping = {
      "Asia": ["East Asia", "South Asia", "Southeast Asia", "Central Asia", "Western Asia"],
      "Europe": ["Northern Europe", "Southern Europe", "Eastern Europe", "Western Europe"],
      "Africa": ["North Africa", "Sub-Saharan Africa"],
      "Americas": ["North America", "South America", "Central America", "Caribbean"],
      "Oceania": ["Australia & New Zealand", "Melanesia", "Micronesia", "Polynesia"]
    };
    const majorSelect = document.getElementById("majorRegion");
    const subSelect = document.getElementById("subRegion");
    function populateSubregions(selectedMajor) {
      subSelect.innerHTML = '<option value="">--Select--</option>';
      if (selectedMajor && regionMapping[selectedMajor]) {
        regionMapping[selectedMajor].forEach(sub => {
          const option = document.createElement("option");
          option.value = sub;
          option.textContent = sub;
          subSelect.appendChild(option);
        });
      }
    }
    majorSelect.addEventListener("change", function() {
      populateSubregions(this.value);
    });
  </script>
</body>
</html>
